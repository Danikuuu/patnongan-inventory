<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inventory</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Poppins', sans-serif;
            color: white;
        }

        .container {
            display: flex;
            flex-direction: column;
            width: 100vw;
            height: 100vh;
            overflow-y: auto; /* Enable vertical scrolling */
            overflow-x: hidden;
            background: linear-gradient(to bottom, #01201b, #071a19);
            padding: 15px;
            box-sizing: border-box;
            align-items: center;
            box-shadow: 5px 5px 15px 0px rgba(0, 0, 0, 0.5);
        }

        .main-frame {
            display: flex;
            flex-direction: column;
            width: 90%;
            height: 95%; /* Keep this height or adjust as needed */
            background-color: transparent;
            border-radius: 15px;
            margin-bottom: 1px;
            padding: 5px;
            gap: 10px;
        }

        header {
            background-color: transparent;
            padding: 0;
            text-align: center;
            color: white;
            display: flex;
            justify-content: space-evenly;
            align-items: center;
            height: 70px;
            gap: 10px;
        }

        h1 {
            margin-top: 20px;
            background-color: white;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            line-height: 0.8em;
            padding: 0 20px;
            border-radius: 15px;
            font-size: 26px;
            color: #083a3c;
            width: 25%;
            border: 1px solid #c6c6c6;
        }

        p1 {
            font-size: 25px;
        }

        p2 {
            font-size: 12px;
            font-weight: normal;
        }

        p2 i {
            color: #fbad48;
        }

        table {
            width: 100%;
            border-collapse: separate;
            font-size: 10px;
            font-weight: normal;
            background-color: white;
            border-radius: 5px;
            border-spacing: 0;
            overflow: hidden;
            color: black;
            padding: 10px;
        }

        .tdHead {
            font-weight: bold;
            font-size: 12.5px;
        }

        .green {
            color: green;
            font-weight: bold;
        }

        td, th {
            padding: 10px 2px 10px 0;
            text-align: left;
            border-bottom: solid 0.5px rgb(174, 174, 174, 0.5);
            margin: 0;

        }

        tr {
            padding: 0;
            height: 3px;
        }

        th {
            color: #497641;
            font-weight: bold;
            width: calc((100%-320px) / 7);
        }

        .fixed-width {
            width: 320px; /* Set the desired width for this column */
        }

        .btn {
            background-color: #083a3c; /* Default color for the Edit button */
            color: white;
            padding: 10px;
            text-decoration: none;
            border-radius: 5px;
            margin: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 12px;
            border: none; /* Remove border for a consistent look */
        }

        .btn-danger {
            background-color: transparent; /* Color for the Delete button */
        }

        .btn-update {
            background-color: transparent; /* Color for the Update button */
            padding: 10px;
            font-size: 10px;
        }

        .icon {
            color: gray;
        }

        .icon:hover {
            color: #fbad48;
        }

        .menu-frame {
            display: flex;
            height: 10%;
            background-color: transparent;
            border-radius: 10px;
        }

        .menu-column {
            flex: 1;
            padding: 5px;
            box-sizing: border-box;
        }

        .logo-card {
            background-color: transparent;
            height: 100%;
            border-radius: 10px;
            display: flex;
            align-items: center;
            gap: 10px;
            color: white;
            font-weight: bold;
        }

        .logo-card img {
            max-height: 80%;
            object-fit: contain;
        }

        .menu-items {
            background-color: transparent;
            height: 100%;
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .profile-card {
            background-color: transparent;
            height: 100%;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: flex-end;
            gap: none;
        }

        .profile-card a {
            color: white;
        }

        .profile-card a:hover {
            color: #fbad48;
        }

        .button {
            background-color: transparent;
            border: none;
            padding: 5px 15px;
            color: rgb(161, 160, 160);
            font-size: 12px;
            cursor: pointer;
            margin: 0 10px;
            text-align: center;
            transition: background-color 0.3s;
            font-family: 'Poppins', sans-serif;
            font-weight: bold;
            text-decoration: none;
        }

        .button:hover {
            color: white;
        }

        .analysis-frame {
            height: 100%;
            background-color: white;
            border-radius: 20px;
            display: flex;
            flex-direction: column;
            padding: 20px 120px;
            gap: 20px;
            color: #083a3c;
            font-weight: bold;
        }

        .title-frame {
            height: 15px;
            background-color: transparent;
            padding: 8px;
            font-size: 20px;
            display: flex;
            justify-content: space-between; /* Change to space-between to position items */
            align-items: center;
            font-weight: bold;
        }

        .addbtn {
            background-color: #497641; /* Default color for the Edit button */
            color: white;
            padding: 5px 10px;
            text-decoration: none;
            border-radius: 10px;
            margin: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 12px;
            text-align: center;
            font-weight: bold;
            border: 1px solid #c6c6c6;
            font-family: 'Poppins', sans-serif;
        }

        .addbtn:hover, .newbtn:hover, .clrbtn:hover, .mngbtn:hover {
            background-color: #fbad48;
        }

        .mngbtn {
            background-color: #083a3c; /* Default color for the Edit button */
            color: white;
            padding: 5px 10px;
            text-decoration: none;
            border-radius: 10px;
            margin: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 12px;
            text-align: center;
            font-weight: bold;
            border: 1px solid #c6c6c6;
            font-family: 'Poppins', sans-serif;
        }

        .exitbtn:hover {
            color: #fbad48;
        }

        .inv-btn i {
            color: #fbad48;
        }

        .inv-btn {
            color: white;
        }

        .emphas {
            font-weight: bold;
        }
        
.modal {
    display: none; /* Hidden by default */
    position: fixed;
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    background-color: rgba(0, 0, 0, 0.5); /* Black w/ opacity */
}

.modal-content {
    background-color: #ffffff;
    margin: 10% auto; /* Center the modal */
    padding: 20px;
    border: 1px solid #888;
    border-radius: 15px;
    width: 90%; /* Adjust as needed */
    max-width: 600px; /* Limit max width */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    color: #083a3c;
    font-size: 8px;
    line-height: 1em;
}

.newbtn {
            background-color: #497641; /* Default color for the Edit button */
            color: white;
            padding: 5px 20px;
            text-decoration: none;
            border-radius: 12px;
            margin: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 12px;
            text-align: center;
            font-weight: bold;
            border: 1px solid #c6c6c6;
            font-family: 'Poppins', sans-serif;
        }

        .clrbtn {
            background-color: orangered;
            color: white;
            padding: 5px 20px;
            text-decoration: none;
            border-radius: 12px;
            margin: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 12px;
            text-align: center;
            font-weight: bold;
            border: 1px solid #c6c6c6;
            font-family: 'Poppins', sans-serif;
        }

        .exitbtn {
            background-color: transparent;
            color: #083a3c;
            padding: 0;
            text-decoration: none;
            border-radius: 12px;
            margin: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 20px;
            text-align: center;
            font-weight: bold;
            font-family: 'Poppins', sans-serif;
        }


        form {
            display: flex;
            flex-direction: column;
            align-items: stretch; /* Make form elements take full width */
            font-family: 'Poppins', sans-serif;
            color: black;
            margin-top: 20px;
            font-size: 12px;
        }
        .form-buttons {
            display: flex;
            justify-content: flex-end; /* Space evenly bet*/
            font-family: 'Poppins', sans-serif;
            margin-top: 10px; /* Space above the buttons */
        }
        .row {
            display: flex;
            margin-bottom: 10px; /* Space between rows */
            gap: 10px;
        }
        .field input,
        .field select {
            flex: 1; /* Allow inputs to grow */
            margin-right: 5px; /* Space between inputs */
            padding: 8px; /* Reduce padding for smaller inputs */
            border: 1px solid #888;
            border-radius: 5px;
            background-color: transparent;
            color: black;
            font-size: 14px; /* Font size for input */
            font-family: 'Poppins', sans-serif;
        }

        .field label {
            flex: 1; /* Allow inputs to grow */
            margin-right: 5px; /* Space between inputs */
            padding: 8px; /* Reduce padding for smaller inputs */
            background-color: transparent;
            color: #888;
            font-size: 14px; /* Font size for input */
            font-family: 'Poppins', sans-serif;
        }
        .field input:last-child,
        .field select:last-child {
            margin-right: 0; /* Remove margin from the last input in the row */
            border: 1px solid #888;
        }

        .field {
            flex: 1;
            display: flex;
            justify-content: center;
            flex-direction: column;
            align-items: left;
            line-height: 0.5em;
        }

        .populate {
            flex: 1; /* Allow inputs to grow */
            margin-right: 5px; /* Space between inputs */
            padding: 8px; /* Reduce padding for smaller inputs */
            border: 1px solid black;
            border-radius: 5px;
            background-color: transparent;
            color: black;
            font-size: 14px; /* Font size for input */
            font-family: 'Poppins', sans-serif;
        }
        /* Dropdown styling */
select {
    appearance: none; /* Remove default dropdown styling */
    background-image: url('data:image/svg+xml;charset=UTF-8,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" %3E%3Cpolyline points="6 9 12 15 18 9" /%3E%3C/svg%3E');
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 12px;
    font-family: 'Poppins', sans-serif;
    color: black; /* Change text color to black */
    border: 1px solid #888;
}

        /* Custom scrollbar styling */
        select::-webkit-scrollbar {
            width: 8px; /* Width of the scrollbar */
        }
        select::-webkit-scrollbar-track {
            background: transparent; /* Background of the scrollbar track */
        }
        select::-webkit-scrollbar-thumb {
            background: #555; /* Color of the scrollbar thumb */
            border-radius: 5px; /* Rounded corners for thumb */
        }
        select::-webkit-scrollbar-thumb:hover {
            background: #777; /* Color of the scrollbar thumb on hover */
        }
        .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    margin-top: 20px;
}

.pagination a, 
.pagination span {
    padding: 8px 16px;
    text-decoration: none;
    border: 1px solid #ddd;
    border-radius: 4px;
    color: #497641;
    font-weight: bold;
}

.pagination a:hover {
    background-color: #497641;
    color: white;
    border-color: #497641;
}

.pagination span {
    background-color: #497641;
    color: white;
    border-color: #497641;
}

.pagination a:active {
    background-color: #5da850;
    color: white;
    border-color: #5da850;
}

.toast {
    visibility: hidden; /* Hidden by default */
    min-width: 250px;
    margin-left: -125px; /* Center the toast */
    background-color: #333; /* Dark background */
    color: #fff; /* White text */
    text-align: center;
    border-radius: 5px; /* Rounded borders */
    padding: 16px;
    position: fixed;
    z-index: 1;
    left: 50%; /* Center the toast horizontally */
    bottom: 30px; /* Position at the bottom */
    font-size: 17px;
    opacity: 0; /* Initial opacity */
    transition: opacity 0.5s, bottom 0.5s ease-in-out;
}

.toast.show {
    visibility: visible; /* Show the toast */
    opacity: 1; /* Full opacity */
    bottom: 50px; /* Move it upwards */
}

.form-container {
            max-width: 400px;
            margin: auto;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }
        label {
            font-weight: bold;
            margin-top: 10px;
            display: block;
        }
        input[type="text"], input[type='number'],
        select {
            width: 100%;
            padding: 10px;
            margin: 8px 0 20px 0;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box; /* Ensures padding doesn't affect width */
        }
        input[type="text"]:focus, input[type='number']:focus,
        select:focus {
            border-color: #4A90E2;
            outline: none;
        }
        input[type="submit"] {
            background-color: #497641;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }
        input[type="submit"]:hover {
            background-color: #5da850;
        }

    </style>
</head>
<body>
    <div class="container">
        <div class="main-frame">
            <div class="menu-frame">
                <div class="menu-column logo-card">
                    <img src="/public/images/logo.png" alt="Logo">
                    PDELSYS
                </div>
                <div class="menu-column menu-items">
                    <a href="/admin/dashboard" class="button das-btn"><i class="fas fa-tachometer-alt"></i> DASHBOARD</a>
                    <a href="/admin/transactions" class="button inv-btn"><i class="fas fa-box"></i> INVENTORY</a>
                    <a href="/admin/orders" class="button dir-btn"><i class="fas fa-address-book"></i> DIRECTORY</a>
                </div>
                <div class="menu-column profile-card">
                    <a href="/logout" class="button out-btn">Logout</a>
                </div>
            </div>
            <div class="analysis-frame">
                <div class="title-frame">
                    <span>Delivery Management</span>
                    <span>
                        <a href="/admin/stocks" class="mngbtn">Manage Stocks &nbsp;<i class="fas fa-cog"></i></a>
                    <button id="addTransactionBtn" class="addbtn" onclick="openModal()">
                        New Order <i class="fas fa-plus"></i>
                    </button></span>
                </div>
                <header>
                    <h1>
                        <span id="totalOrdersCount"><%= orders.length %></span>
                        <p2><i class="fas fa-shopping-cart"></i> total orders</p2>
                    </h1>
                    <h1>
                        <span id="pendingCount"><%= orders.filter(o => o.status === 'pending').length %></span>
                        <p2><i class="fas fa-hourglass-half"></i> pending</p2>
                    </h1>
                    <h1>
                        <span id="deliveredCount"><%= orders.filter(o => o.status === 'delivered').length %></span>
                        <p2><i class="fas fa-check-circle"></i> delivered</p2>
                    </h1>
                    <h1>
                        <span id="cancelledCount"><%= orders.filter(o => o.status === 'cancelled').length %></span>
                        <p2><i class="fas fa-times-circle"></i> cancelled</p2>
                    </h1>
                </header>
                <div>
                    <hr>
                    <table>
                        <thead>
                            <tr>
                                <th>Order No.</th>
                                <th class="fixed-width">Ordered By</th>
                                <th>Purchase</th>
                                <!-- <th>Dispatch</th> -->
                                <th>Delivered By</th>
                                <th  colspan="2">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% orders.forEach(order => { %>
                                <tr>
                                    <td>
                                        <span class="tdHead"><%= order.tr %><br></span>
                                        <span class="green">
                                            <%= order.placed ? new Date(order.placed).toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' }) : 'N/A' %>
                                        </span>
                                    </td>
                                    <td>
                                        <span class="tdHead"><%= order.customer.first_name %> <%= order.customer.last_name %></span><br>
                                        <%= order.address %>
                                    </td>
                                    <td>
                                        <span class="tdHead">
                                            <%= order.total.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) %>
                                        </span><br>
                                        <%= order.qty ? `${order.qty} Item${order.qty > 1 ? 's' : ''}` : '' %>
                                    </td>
                                    <td>
                                        <span class="tdHead"><%= order.courier || 'N/A' %></span><br>
                                        <% if (!order.status) { %>
                                            <span>Pending</span>
                                        <% } else if (order.status === 'cancelled') { %>
                                            <span style="color: red;"><%= order.status %></span>
                                        <% } else if (order.status === 'delivered') { %>
                                            <span style="color: green;"><%= order.status %></span>
                                        <% } else { %>
                                            <span><%= order.status %></span>
                                        <% } %>
                                        <% if (order.delivered) { %>
                                            &bull; <span style="color: green;">
                                                <%= new Date(order.delivered).toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' }) %>
                                            </span>
                                        <% } %>
                                    </td>
                                    <td>
                                        <a onclick="openEditModal(
                                            '<%= order._id %>', 
                                            '<%= order.amount %>', 
                                            '<%= order.qty %>', 
                                            '<%= order.customer.first_name %> <%= order.customer.last_name %>', 
                                            '<%= order.address %>', 
                                            '<%= order.dispatch ? new Date(order.dispatch).toISOString() : '' %>', 
                                            '<%= order.delivered ? new Date(order.delivered).toISOString() : '' %>', 
                                            '<%= order.status %>'
                                        )">
                                            <i class="fas fa-pen icon"></i>
                                        </a>
                                    </td>
                                    <td>
                                        <form action="/admin/delete-order/<%= order._id %>" method="POST" style="margin: 0;">
                                            <button type="submit" class="btn btn-danger">
                                                <i class="fas fa-trash-alt icon"></i>
                                            </button>
                                        </form>                                        
                                    </td>
                                </tr>
                                
                                <!-- Modal for editing order -->
                                <div class="modal" id="editModal_<%= order._id %>" style="display:none;">
                                    <div class="modal-content">
                                        <div class="title-frame">
                                            <a onclick="closeEditModal('editModal_<%= order._id %>')" class="exitbtn"><i class="fas fa-arrow-left"></i></a>
                                            <span>UPDATE DELIVERY</span>
                                        </div>
                                        <form id="editForm" action="/admin/edit-order/<%= order._id %>?_method=PUT" method="POST">
                                            <input type="hidden" name="_method" value="PUT">
                                            <div class="row">
                                                <div class="field">
                                                    <label for="customer_name_<%= order._id %>">Customer Name:</label>
                                                    <input type="text" name="customer_name" id="customer_name_<%= order._id %>" required>
                                                </div>
                                                <div class="field">
                                                    <label for="address_<%= order._id %>">Address:</label>
                                                    <input type="text" name="address" id="address_<%= order._id %>" required>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="field">
                                                    <label for="qty_<%= order._id %>">Quantity:</label>
                                                    <input type="number" name="qty" id="qty_<%= order._id %>" required>
                                                </div>
                                                <div class="field">
                                                    <label for="amount_<%= order._id %>">Amount:</label>
                                                    <input type="number" name="amount" id="amount_<%= order._id %>" required>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="field">
                                                    <label for="dispatch_<%= order._id %>">Dispatch Date:</label>
                                                    <input type="date" name="dispatch" id="dispatch_<%= order._id %>">
                                                </div>
                                                <div class="field">
                                                    <label for="status_<%= order._id %>">Status:</label>
                                                    <select name="status" id="status_<%= order._id %>" required>
                                                        <option value="Pending">Pending</option>
                                                        <option value="Delivered">Delivered</option>
                                                        <option value="Cancelled">Cancelled</option>
                                                    </select>
                                                </div>
                                                <div class="field">
                                                    <label for="delivered_<%= order._id %>">Delivered Date:</label>
                                                    <input type="date" name="delivered" id="delivered_<%= order._id %>">
                                                </div>
                                            </div>
                                            <div class="form-buttons">
                                                <button type="reset" class="clrbtn">CLEAR</button>
                                                <button type="submit" class="newbtn">SAVE</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                        
                            <% }) %>                          
                        </tbody>
                        
                        <script>
                            function openEditModal(transactionId, amount, qty, customerName, address, dispatch, delivered, status) {
                                // Set values in the form fields
                                document.getElementById('customer_name_' + transactionId).value = customerName;
                                document.getElementById('address_' + transactionId).value = address;
                                document.getElementById('qty_' + transactionId).value = qty;
                                document.getElementById('amount_' + transactionId).value = amount;
                        
                                // Set dispatch and delivered dates
                                document.getElementById('dispatch_' + transactionId).value = dispatch ? new Date(dispatch).toISOString().substring(0, 10) : '';
                                document.getElementById('delivered_' + transactionId).value = delivered ? new Date(delivered).toISOString().substring(0, 10) : '';
                        
                                // Set the status
                                const statusSelect = document.getElementById('status_' + transactionId);
                                statusSelect.value = status;
                        
                                // Show the modal
                                document.getElementById('editModal_' + transactionId).style.display = 'block';
                            }
                        
                            function closeEditModal(modalId) {
                                document.getElementById(modalId).style.display = 'none';
                            }
                        </script>
                        
                    </table>
                    <div class="pagination">
                        <% if (currentPage > 1) { %>
                            <a href="?page=<%= currentPage - 1 %>&limit=<%= limit %>">Previous</a>
                        <% } %>
                        
                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <% if (i === currentPage) { %>
                                <span><%= i %></span> <!-- Current page, no link -->
                            <% } else { %>
                                <a href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
                            <% } %>
                        <% } %>
                        
                        <% if (currentPage < totalPages) { %>
                            <a href="?page=<%= currentPage + 1 %>&limit=<%= limit %>">Next</a>
                        <% } %>
                    </div>

                </div>
            </div>
        </div>
    </div>

<!-- The Modal -->
<!-- Modal HTML -->
<div id="modal" class="modal">
    <div class="modal-content">
        <div class="title-frame">
            <a onclick="closeModal()" class="exitbtn"><i class="fas fa-arrow-left"></i></a>
            <span>NEW DELIVERY</span>
        </div>
        <form action="/admin/add-order" method="post">
            <label for="Name">Customer</label>
            <select name="customer" id="customer" required>
                <option value="">Select a Customer</option>
                <% customers.forEach(customer => { %>
                    <option value="<%= customer._id %>"><%= customer.first_name %> <%= customer.last_name %></option>
                <% }) %>
            </select>
            
            <label for="Product">Product</label>
            <select name="product" id="product"required
                <option value="">Select a product</option>
                <% products.forEach(product => { %>
                    <option value="<%= product._id %>" data-price="<%= product.price %>"><%= product.name %></option>
                <% }) %>
            </select>
            
            <label for="Quantity">Quantity</label>
            <input type="number" name="quantity" id="quantity" min="1" value="1" required>
            
            <label for="Amount">Amount</label>
            <input type="text" name="amount" id="amount" readonly>
            
            <label for="Courier">Courier</label>
            <select name="courier" id="courier" required>
                <option value="in-house">In-House</option>
                <option value="third-party">Third-Party</option>
            </select>
            
            <input type="submit" value="Submit">
        </form>
            
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const productSelect = document.getElementById('product');
        const quantityInput = document.getElementById('quantity');
        const amountInput = document.getElementById('amount');

        function calculateAmount() {
            const selectedOption = productSelect.options[productSelect.selectedIndex];
            const price = parseFloat(selectedOption.dataset.price) || 0;
            const quantity = parseInt(quantityInput.value) || 0;
            const amount = price * quantity;
            amountInput.value = amount.toFixed(2); // Format to 2 decimal places
        }

        productSelect.addEventListener('change', calculateAmount);
        quantityInput.addEventListener('input', calculateAmount);
    });
</script>

<% if (success) { %>
    <div id="toast" class="toast"><%= success %></div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const toast = document.getElementById('toast');
            toast.className = "toast show";
            setTimeout(function() {
                toast.className = toast.className.replace("show", "");
            }, 3000); // Hide toast after 3 seconds
        });
    </script>
    <% } %>



<script>
    function openModal() {
        document.querySelector(".modal").style.display = "block";
    }

    function closeModal() {
        document.querySelector(".modal").style.display = "none";
    }
</script>

<!-- Edit Modal -->


<script>
    function openEditModal(transactionId, amount, qty, customerName, address, dispatch, delivered, status) {
        // Set values in the form fields
        document.getElementById('customer_name_' + transactionId).value = customerName;
        document.getElementById('address_' + transactionId).value = address;
        document.getElementById('qty_' + transactionId).value = qty;
        document.getElementById('amount_' + transactionId).value = amount;

        // Set dispatch and delivered dates
        document.getElementById('dispatch_' + transactionId).value = dispatch ? new Date(dispatch).toISOString().substring(0, 10) : '';
        document.getElementById('delivered_' + transactionId).value = delivered ? new Date(delivered).toISOString().substring(0, 10) : '';

        // Set the status
        const statusSelect = document.getElementById('status_' + transactionId);
        statusSelect.value = status;

        // Show the modal
        document.getElementById('editModal_' + transactionId).style.display = 'block';
    }

    function closeEditModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }
</script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const productSelect = document.getElementById('product');
    
        // Populate product prices into the options
        <% products.forEach(product => { %>
            const option = productSelect.querySelector(`option[value='<%= product.name %>']`);
            option.dataset.price = <%= product.price %>; // Store price in data attribute
        <% }) %>
    
        productSelect.addEventListener('change', updatePrice);
        document.getElementById('quantity').addEventListener('input', updatePrice);
    
        function updatePrice() {
            const selectedOption = productSelect.options[productSelect.selectedIndex];
            const price = parseFloat(selectedOption.dataset.price) || 0; // Use dataset price if available
            const quantity = parseInt(document.getElementById('quantity').value) || 0;
    
            const totalAmount = price * quantity;
            document.getElementById('amount').value = totalAmount.toFixed(2); // Display the amount with two decimal points
        }
    });
    </script>
    
</body>

</html>
